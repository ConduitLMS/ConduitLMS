datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id    Int     @id @default(autoincrement())
  hashedPassword String
  organization Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  salt String
  resetToken String?
  resetTokenExpiresAt DateTime?
  email String  @unique
  name  String?
  webAuthnChallenge   String? @unique
  credentials         UserCredential[]
  departments Department[]
  roles Role[]
}

model UserCredential {
  id         String  @id
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
}

model Organization {
 id    Int     @id @default(autoincrement())
 name  String
 contactEmail String?
 description String?
 address     String?
 logo        String?
 country     String?
 createdAt   DateTime @default(now())
 updatedAt   DateTime @updatedAt
 users       User[]
 departments Department[]
}

model Department {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  organization Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  users       User[]
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  level      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

